// gradle build script to continuously translate asciidoctor documents into html;
// cd ~/DoctorPepper
// gradlew -t asciidoctor
// assumes you are running something like Dropbox or Google Drive, but also could be run locally
// from a second terminal session;
// All output html is written to gradle project folder named build/docs
// All input comes from the src/docs/asciidoc folder
// Task walker creates a toc.adoc file (table of contents) AFTER the asciidoctor task writes the *.html files to /build/docs

apply plugin: 'groovy'
apply plugin: 'org.asciidoctor.convert'
apply plugin: "jacoco"

defaultTasks 'asciidoctor'  ,'walker' 

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath group: 'org.asciidoctor', name: 'asciidoctorj-pdf', version: '1.5.0-alpha.14' // to support backends=['pdf']
    }
}


// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile "org.codehaus.groovy:groovy-all:2.4.12"
    runtime "org.codehaus.groovy:groovy-all:2.4.12"

    // We use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'
}

println "Gradle projectDir=${projectDir}"


asciidoctor {
  outputDir = file('build/docs')
  separateOutputDirs=false  
  backends = ['html5','pdf']	// if you don't want PDFs delete 'pdf'
  
  resources {
    from('src/resources/images') {}
    into './images'
  }


  attributes 'source-highlighter': 'coderay',
                toc                 : 'right',
                idprefix            : '',
                idseparator         : '-'
                
} // end of asciidoctor

// runs our main() method; first arg points to a local folder path name to read thru; 2nd arg is output folder for toc.adoc summaty file
task(walker, dependsOn: 'classes', type: JavaExec) {
	main = 'DocWalker'
	classpath = sourceSets.main.runtimeClasspath
	args "${projectDir}/build", "${projectDir}/src/docs/asciidoc"
}

// Code Coverage Tool
jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2' 
}
